---
layout: post
title:  "React에서 기본 HOOK 사용하기"
date:   2024-08-13 19:04:19 +0900
categories: React
---

안녕하세요 한창 *React* 공부를 하고 있는 문소연입니다.

*React*를 조금이라도 해보신 분이라면 `Hook`에 대해 들어보셨을 것입니다. React Hooks는 함수형 컴포넌트에서 `상태(state)`와 `라이프사이클(lifecycle)` 기능을 사용할 수 있게 해주는 개념입니다.

**클래스형** 컴포넌트에서만 가능했던 여러 작업들을 **함수형** 컴포넌트에서도 가능하게 해주는 것입니다.

처음 *React*를 제대로 배워보며 `Hook` 사용법을 익히기 위해 여러 기초적인 컴포넌트들을 만들어보았습니다.
이를 바탕으로 몸으로 직접 느낀 `useState`와 `useEffect` 사용법에 대해 설명하겠습니다.

*React*를 학습한 기간은 짧지만 지금껏 컴포넌트들을 만들며 가장 많이 사용되어지는 `Hooks`기에 `useState`와 `useEffect`를 선택하게 되었습니다.

---

### useState

**상태(state)** 를 함수형 컴포넌트에서 관리할 수 있게 해주는 `Hook`입니다.
초기 상태를 인수로 받아, **현재 상태**와 그 **상태를 갱신**할 수 있는 함수를 반환합니다.

***변수*** 라고 생각하시면 편합니다. 조건에 따라, 혹은 상태가 변화하는 값은 모두 `useState`를 통해 정의하면 됩니다.

예를 들어, 로그인 기능을 만들고자 합니다. 이 때 '*로그인*'버튼이 존재하겠죠! 그리고 로그인에 성공한다면 '*로그아웃*'의 버튼으로 **변경**이 되어야합니다.

```javascript
const [logButton, setLogButton] = useState('로그인');

if(로그인 성공)
{
    setLogButton('로그아웃');
}

return(
    <div>
        <button>{logButton}</button>
    </div>
);
```
이처럼 **변화될 값**인 로그인과 로그아웃을 `useState`로 정의합니다.

정의할 때에 `useState(초기값);`으로 정의해야 합니다. 따라서, 예시코드에서 버튼 초기값인 '로그인'으로 설정해주었습니다.
예시가 로그인이기에 '로그인' 이라는 `String값`을 사용하였지만 `int값`, `배열([])`, `객체({})`등 모든 type 정의가 가능합니다!

변수명은 `const[변수명,set변수명]` 형식으로 작성합니다. 예시코드에 따르면 변수명 `logButton`으로 설정하였고, set변수명 **(상태 업데이트 함수)** 의 첫 letter는 `setLogButton`과 같이 대문자로 작성해주셔야 합니다.

if문은 이해하기 편하도록 `if(로그인 성공)`으로 썼으나, 실제 로그인 로직에서는 버튼 `onClick`을 하였을 때 해당 이벤트 함수내에 `setLogButton`함수가 들어가면 됩니다.

이후, `return`내에 예시코드와 같이 정의한 변수를 사용하면 됩니다.

처음 `useState`를 접했을 때에는 '***변수***라고 생각하면 된다.' 라는 말도 잘 와닿지 않았습니다. 하지만 작은 컴포넌트들을 만들다 보니 자연스레 변수들을 `useState`로 정의하고 있었습니다. 이처럼 `useState`는 금방 익힐 수 있는 `Hook`입니다.

---

### useEffect